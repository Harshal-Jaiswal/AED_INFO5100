/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Encounter;
import Model.MedSystem;
import Model.Patient;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.HashMap;
import java.util.HashSet;
import Model.Person;
import java.util.Set;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harshaljaiswal
 */
public class Analytics extends javax.swing.JPanel {

    /**
     * Creates new form Analytics
     */
    HashMap<String, Integer> set;
    MedSystem ms;

    public Analytics(MedSystem ms) {
        initComponents();
        this.ms = ms;
        set = new HashMap<>();

        for (Patient pat : ms.getPatientList().getPatients()) {
            for (Encounter enc : pat.getEncounterHistory().getEncounterHistory()) {
                int bp = enc.getVitalSign().getBloodPressure();
                Period period =  Period.between( pat.getDob().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(), LocalDate.now());
                System.out.println("sdf "+ isAbnormal( period.getYears() , bp) );
                if(isAbnormal( period.getYears() , bp) ){
                    if(set.containsKey(pat.getResidence().getState()) ){
                        Integer res = set.get(pat.getResidence().getState());
                        set.put(pat.getResidence().getState(), ++res);
                    }else{
                        set.put(pat.getResidence().getState(), 1);
                    }
                    
                }
            }
        }
        displayPatient();
    }

    public boolean isAbnormal(int age, int val) {
        System.out.println("jkdsf" + age +" "+val);

        if (age < 21) {
            if (val >= 109 && val <= 121) {
                return true;
            } else {
                return false;
            }
        } else if (age < 46) {
            if (val >= 115 && val <= 125) {
                return true;
            } else {
                return false;
            }
        } else if (age < 65) {
            if (val >= 118 && val <= 129) {
                return true;
            } else {
                return false;
            }
        }else {
            if (val >= 130 && val <= 143) {
                return true;
            } else {
                return false;
            }
        }

    }
    
     private void displayPatient() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
       model.setRowCount(0);
        for (Object key : set.keySet().toArray()) {
          
            Object[] row = new Object[5];
            row[0] = key.toString();
            row[1] = set.get(key);

            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Community", "Abnormal", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Analytics");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
